version: '3.9'

services:

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq

  redis:
    image: redis:7.0.11-alpine
    container_name: redis

  app:
    build: 
      context: .
    container_name: backend
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    depends_on:
      - db
      - redis
      - rabbitmq

  celery:
    build: 
      context: .
    container_name: celery-worker
    command: celery -A app worker -l INFO -Q tasks
    volumes:
      - static-data:/vol/web
    restart: always
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    depends_on:
      - db
      - app
      - rabbitmq

  db:
    image: postgres:13-alpine
    container_name: postgres-db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    restart: always

  proxy:
    build:
      context: ./proxy
    restart: always
    depends_on:
      - app
    ports:
      - 80:8000
    volumes:
      - static-data:/vol/static


volumes:
  postgres-data:
  static-data: